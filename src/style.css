:root {
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;
}
a:hover {
  color: #535bf2;
}

body {
  margin: 0;
  display: flex;
  place-items: center;
  min-width: 320px;
  min-height: 100vh;
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
}

#app {
  max-width: 1280px;
  margin: 0 auto;
  padding: 2rem;
  text-align: center;
}

.logo {
  height: 6em;
  padding: 1.5em;
  will-change: filter;
  transition: filter 300ms;
}
.logo:hover {
  filter: drop-shadow(0 0 2em #646cffaa);
}
.logo.vanilla:hover {
  filter: drop-shadow(0 0 2em #3178c6aa);
}

.card {
  padding: 2em;
}

.read-the-docs {
  color: #888;
}

button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: #1a1a1a;
  cursor: pointer;
  transition: border-color 0.25s;
}
button:hover {
  border-color: #646cff;
}
button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
}

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
  a:hover {
    color: #747bff;
  }
  button {
    background-color: #f9f9f9;
  }
}

/* 
  1.1 En modo mobile, no queremos que se vean los logos de Vite ni
  TS, solo queremos ver una lista de libros.

  Para pantallas con un ancho m치ximo de 768px
  
  inspeccione los elementos y observe que el div de logos y del boton de cuenta estan dentro del div con clase first-div

  entonces, utilizo un media query para aplicar un style a esa clase solo cuando la panta침a es menor a 768px, que es el 
  tama침o promedio para tablets mostrado en las devtools

  */
@media only screen and (max-width: 768px) {
  .first-div {
  visibility: hidden;  /** hidden para no mostrar el contenido del div*/
  display: none; /* none para que el div y su contenido no ocupen espacio en la pagina*/
  }
}


/* aplico estilos para desktop */
@media only screen and (min-width: 769px) {

  /*
  1.2 En modo desktop, queremos ver los logos en una columna a la
  izquierda de la pantalla y los libros a la derecha de la pantalla.

  inspencione los elementos y observe que el div de los logos (.first-div) y el div de los libros (.second-div)
  son contenidos por un div padre (.app)

  entonces solo aplico un estilo flex: 1 con direccion row para que sus hijos se posiciones uno al lado del otro

  ademas agrego estilo a .first-div flex para que este se vea mejor en forma de columna y por ultimo agrego estilo al h1
  en .first div para que su tama침o quede bien dentro de la columna

  */
  .app {
    display: flex;
    flex: 1;
    flex-direction: row;
  }

  .first-div {
    display: flex;
    flex: 1;
    flex-direction: column;
    max-width: 25%;
  }

  .first-div h1{
    font-size: calc( 2rem + 1vmax );
  }

  /*
  1.3 En modo desktop, queremos que por fila se puedan mostrar al
  menos dos libros, pero en modo mobile si sea una sola lista
  vertical.

  observo que solo necesito dividir .second-div en 2 columnas en vez de una, entonces busco como hacerlo en grid.
  una solucion bastante simple, mientras mas autos tiene grid-template-columns, mas columnas se generan
  */

  /**https://stackoverflow.com/questions/67698930/how-to-make-a-2-column-grid-in-html*/
  .second-div {
    display: grid;
    grid-template-columns: auto auto;
  }
}

